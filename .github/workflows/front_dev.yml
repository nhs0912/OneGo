name: Deploy To oracle_serverA_front

on:
  push:
    branches:
      - front_dev
      # steps에 대한 기본 작업 디렉토리 설정
#defaults:
  #run:
    #working-directory: ./onego-front
    
jobs:
  pull:  
    runs-on: ubuntu-latest
    steps:      
      - name: show me the checkout folder path 
        run: ls -al
      
      - name: Github Repository file 불러오기 
        uses: actions/checkout@v4

      - name: show me the checkout folder Info 
        run: ls -al
      
      - name: Setup nodejs
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          #cache: npm # setup-node 의 캐시 기능을 사용함 (저는 npm을 사용하므로 npm을 썼습니다. -> 본인의 세팅에 맞춰서 변경해야 합니다.)
          cache-dependency-path: onego-front/package-lock.json # 캐시 기능          
          
      - name: 현재 폴더 나타내기
        run: pwd
  
  build:  
    needs: pull
    runs-on: ubuntu-latest
    env:
      working-directory: ./onego-front/
    steps:      
      - name: 현재 폴더 나타내기
        run: pwd      
      
      - name: show me the checkout folder Info 
        run: ls -al
        
      - name: Install packages        
        run: npm install
        working-directory: ${{ env.working-directory }}
        
      - name: Build Vue application
        run: npm run build
        working-directory: ${{ env.working-directory }}
  
  docker:  
    needs: build    
    runs-on: ubuntu-latest
    env:
      working-directory: /home/runner/work/OneGo/OneGo/onego-front/
    steps:
      # DockerHub 로그인
      - name: DockerHub Login
        uses: docker/login-action@v2
        with:
            username: ${{ secrets.DOCKER_HUB_USERNAME }}
            password: ${{ secrets.DOCKER_HUB_PASSWORD }}

       # Docker 이미지 빌드
      - name: Docker Image Build
        run: docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/${{ secrets.DOCKER_HUB_ONEGO_FRONT }} .
        working-directory: ${{ env.working-directory }}
        
        # DockerHub Push
      - name: DockerHub Push
        run: docker push ${{ secrets.DOCKER_HUB_USERNAME }}/${{ secrets.DOCKER_HUB_ONEGO_FRONT }}
        working-directory: ${{ env.working-directory }}


  server_deploy:
      needs: docker
      runs-on: ubuntu-latest
      steps:
      - name: server접속 및 Application Run
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.ORACLE_SERVER_A_IP }}
          username: ${{ secrets.ORACLE_SERVER_A_USER }}
          key: ${{ secrets.ORACLE_SERVER_A_PRIVATE_KEY }}
          script: |
            sudo docker kill ${{ secrets.DOCKER_HUB_ONEGO_FRONT }}
            sudo docker rm -f ${{ secrets.DOCKER_HUB_ONEGO_FRONT }}
            sudo docker rmi ${{ secrets.DOCKER_HUB_USERNAME }}/${{ secrets.DOCKER_HUB_ONEGO_FRONT }}
            sudo docker pull ${{ secrets.DOCKER_HUB_USERNAME }}/${{ secrets.DOCKER_HUB_ONEGO_FRONT }}

            sudo docker run -p ${{ secrets.FRONT_PORT }}:${{ secrets.FRONT_PORT }} \
            --name ${{ secrets.DOCKER_HUB_ONEGO_FRONT }} \            
            -d ${{ secrets.DOCKER_HUB_USERNAME }}/${{ secrets.DOCKER_HUB_ONEGO_FRONT }}


# -e SPRING_DATASOURCE_URL=${{ secrets.DB_URL }} \
# -e SPRING_DATASOURCE_USERNAME=${{ secrets.DB_USERNAME }} \
# -e SPRING_DATASOURCE_PASSWORD=${{ secrets.DB_PASSWORD }} \

plugins {
	id 'java'
	id 'org.springframework.boot' version '3.0.1'
	id 'io.spring.dependency-management' version '1.1.0'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6'
	implementation 'io.jsonwebtoken:jjwt:0.9.1' // java JWT library
	implementation 'javax.xml.bind:jaxb-api:2.3.1' //XML 문서와 JAVA 객체 간 매핑을 자동화
	implementation 'org.projectlombok:lombok'
	implementation 'org.flywaydb:flyway-core'
	implementation 'org.flywaydb:flyway-mysql'

	annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"
	runtimeOnly 'com.h2database:h2'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testImplementation "org.assertj:assertj-core:3.22.0"
	testImplementation "org.mockito:mockito-core:3.+"
	testImplementation 'org.junit.jupiter:junit-jupiter-api'
	testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
}

test {
	useJUnitPlatform()
}

//서브 모듈에 있는 yml 파일들을 빌드 시에 가져오기
task copyPrivate(type: Copy){
	copy{
		from './submodule_OneGo'
		include "*.yml"
		into 'src/main/resources'
	}
}
